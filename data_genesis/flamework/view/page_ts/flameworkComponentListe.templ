import { Component,OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { HttpClient } from '@angular/common/http';
import { API_CONFIG } from 'src/app/api.config';
import { ToastController } from '@ionic/angular';


@Component({
  selector: 'app-liste-[classNameMin]',
  templateUrl: './[classNameMin]-list.page.html'
})
export class [classNameMaj]ListPage implements OnInit{

  [classNameMin]s: any = [];
  [foreignList]
  
  formData = {
    [formData]
  };

  constructor(
    private http: HttpClient,
    private toastController: ToastController,
    private router: Router
  ) { }

  ngOnInit(): void {
    this.getData();
    [callGetDataForeign]

  }

  [getDataForeignList]

  navigateTo(lien:string) {
    this.router.navigate([lien]);
  }

  // get(select)
  getData() {
    this.http.get(API_CONFIG.apiUrl + '/[classNameMin]').subscribe((response) => {
      this.[classNameMin]s = response;
      console.log(response);
    }, (error) => {
      console.error(error);
    });
  }

  // post(insert)
  submitForm() {
    this.http.post<any>(API_CONFIG.apiUrl + '/[classNameMin]', this.formData).subscribe(response => {
      window.location.reload();
      this.toggleLiveDemo();
    }, error => {
      // Handle error
      console.error('Error:', error);
    });
  }

  // Modifier
  public update(id: any) {
    /*REDIRECTION VERS LA PAGE D'UPDATE(emp-update)
    EN ENVOYANT L'ID DE LA LIGNE A MODIFIER
    PAR UNE VARIABLE DE PAGE */
    this.router.navigate(['/[classNameMin]-update', id]);
  }

  public visible = false;

  toggleLiveDemo() {
    this.visible = !this.visible;
  }

  handleLiveDemoChange(event: any) {
    this.visible = event;
  }

  modifier[classNameMaj](id: number) {
    this.router.navigate(['/modifier_[classNameMin]', id]);
  }

  // delete 
  delete[classNameMaj](id:number){
    this.http.delete<any>(`${API_CONFIG.apiUrl}/[classNameMin]/${id}`).subscribe(response => {
      console.log(response);
      window.location.reload();
    }, error => {
      console.error('Error:', error);
    });
  }
  
}
